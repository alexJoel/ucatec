{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport NavigationDrawer from \"./src/navigation/NavigationDrawer\";\nimport SimpleSignInScreen from \"./src/screens/SimpleSignInScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SplashScreen from \"./src/screens/SplashScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLoading = _React$useState2[0],\n    setIsLoading = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    userToken = _React$useState4[0],\n    setUserToken = _React$useState4[1];\n  var getUserToken = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var sleep = function sleep(ms) {\n        return new Promise(function (r) {\n          return setTimeout(r, ms);\n        });\n      };\n      try {\n        yield sleep(2000);\n        var token = null;\n        setUserToken(token);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function getUserToken() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  React.useEffect(function () {\n    getUserToken();\n  }, []);\n  if (isLoading) {\n    return _jsx(SplashScreen, {});\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: userToken == null ? _jsx(Stack.Screen, {\n        name: \"SignIn\",\n        component: SimpleSignInScreen,\n        options: {\n          title: 'Sign in'\n        },\n        initialParams: {\n          setUserToken: setUserToken\n        }\n      }) : _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","React","NavigationDrawer","SimpleSignInScreen","HomeScreen","createNativeStackNavigator","SplashScreen","jsx","_jsx","Stack","App","_React$useState","useState","_React$useState2","_slicedToArray","isLoading","setIsLoading","_React$useState3","_React$useState4","userToken","setUserToken","getUserToken","_ref","_asyncToGenerator","sleep","ms","Promise","r","setTimeout","token","apply","arguments","useEffect","children","Navigator","Screen","name","component","options","title","initialParams"],"sources":["/Users/alexssi/Documents/front/eUcatec/ucatec/App.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport NavigationDrawer from './src/navigation/NavigationDrawer';\nimport SimpleSignInScreen from './src/screens/SimpleSignInScreen';\nimport HomeScreen from './src/screens/HomeScreen';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SplashScreen from './src/screens/SplashScreen';\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [userToken, setUserToken] = React.useState(null);\n\n    const getUserToken = async () => {\n        // testing purposes\n        const sleep = (ms) => new Promise((r) => setTimeout(r, ms));\n        try {\n            // custom logic\n            await sleep(2000);\n            const token = null;\n            setUserToken(token);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    React.useEffect(() => {\n        getUserToken();\n    }, []);\n\n    if (isLoading) {\n        // We haven't finished checking for the token yet\n        return <SplashScreen />;\n    }\n    return (\n        <NavigationContainer>\n            <Stack.Navigator>\n                {userToken == null ? (\n                    // No token found, user isn't signed in\n                    <Stack.Screen\n                        name=\"SignIn\"\n                        component={SimpleSignInScreen}\n                        options={{\n                            title: 'Sign in',\n                        }}\n                        initialParams={{ setUserToken }}\n                    />\n                ) : (\n                    // User is signed in\n                    <Stack.Screen name=\"Home\" component={HomeScreen} />\n                )}\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n}\n"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAO,8BAA8B;AACrC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,gBAAgB;AACvB,OAAOC,kBAAkB;AACzB,OAAOC,UAAU;AACjB,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AACtD,IAAMC,KAAK,GAAGJ,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASK,GAAGA,CAAA,EAAG;EAC1B,IAAAC,eAAA,GAAkCV,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA/CI,SAAS,GAAAF,gBAAA;IAAEG,YAAY,GAAAH,gBAAA;EAC9B,IAAAI,gBAAA,GAAkChB,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAA/CE,SAAS,GAAAD,gBAAA;IAAEE,YAAY,GAAAF,gBAAA;EAE9B,IAAMG,YAAY;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAE7B,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAIC,EAAE;QAAA,OAAK,IAAIC,OAAO,CAAC,UAACC,CAAC;UAAA,OAAKC,UAAU,CAACD,CAAC,EAAEF,EAAE,CAAC;QAAA,EAAC;MAAA;MAC3D,IAAI;QAEA,MAAMD,KAAK,CAAC,IAAI,CAAC;QACjB,IAAMK,KAAK,GAAG,IAAI;QAClBT,YAAY,CAACS,KAAK,CAAC;MACvB,CAAC,SAAS;QACNb,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAAA,gBAXKK,YAAYA,CAAA;MAAA,OAAAC,IAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAWjB;EAED9B,KAAK,CAAC+B,SAAS,CAAC,YAAM;IAClBX,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIN,SAAS,EAAE;IAEX,OAAOP,IAAA,CAACF,YAAY,IAAE,CAAC;EAC3B;EACA,OACIE,IAAA,CAACR,mBAAmB;IAAAiC,QAAA,EAChBzB,IAAA,CAACC,KAAK,CAACyB,SAAS;MAAAD,QAAA,EACXd,SAAS,IAAI,IAAI,GAEdX,IAAA,CAACC,KAAK,CAAC0B,MAAM;QACTC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAAElC,kBAAmB;QAC9BmC,OAAO,EAAE;UACLC,KAAK,EAAE;QACX,CAAE;QACFC,aAAa,EAAE;UAAEpB,YAAY,EAAZA;QAAa;MAAE,CACnC,CAAC,GAGFZ,IAAA,CAACC,KAAK,CAAC0B,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEjC;MAAW,CAAE;IACrD,CACY;EAAC,CACD,CAAC;AAE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}